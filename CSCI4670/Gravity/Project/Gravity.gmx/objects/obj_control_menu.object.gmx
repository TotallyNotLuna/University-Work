<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animationOver = 1;
enterGameAnimation = 0;
enterCreditAnimation = 0;

menuAlpha = 1;

menuXMargin = room_width/6;
menuYMargin = room_height/2;

playColor = c_white;
leaderboardColor = c_white;
creditsColor = c_white;
exitColor = c_white;

alarm[0] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( mouse_x &gt; menuXMargin and mouse_x &lt; menuXMargin + 150 and mouse_y &gt; menuYMargin and mouse_y &lt; menuYMargin + 70){
    
    playColor = make_colour_rgb(180, 180, 180);
        
    if(mouse_check_button_released(mb_left)){
        
        enterGameAnimation = 1;
    }
}else{
    
    playColor = c_white;
}

if( mouse_x &gt; menuXMargin and mouse_x &lt; menuXMargin + 150 and mouse_y &gt; menuYMargin + 70 and mouse_y &lt; menuYMargin + 120){
    
    leaderboardColor = make_colour_rgb(100, 100, 100);
        
    if(mouse_check_button_released(mb_left)){
        
        game_end();
    }
}else{
    
    leaderboardColor = make_colour_rgb(100, 100, 100);
}

if( mouse_x &gt; menuXMargin and mouse_x &lt; menuXMargin + 150 and mouse_y &gt; menuYMargin + 120 and mouse_y &lt; menuYMargin + 170){
    
    creditsColor = make_colour_rgb(180, 180, 180);
        
    if(mouse_check_button_released(mb_left)){
        
        enterCreditAnimation = 1;
    }
}else{
    
    creditsColor = c_white;
}

if( mouse_x &gt; menuXMargin and mouse_x &lt; menuXMargin + 150 and mouse_y &gt; menuYMargin + 170 and mouse_y &lt; menuYMargin + 220){
    
    exitColor = make_colour_rgb(180, 180, 180);
        
    if(mouse_check_button_released(mb_left)){
        
        game_end();
    }
}else{
    
    exitColor = c_white;
}

if (enterGameAnimation == 1){

    if (menuAlpha &lt;= 0){
    
        room_goto(rm_game);
    }else{
    
        menuAlpha -= 0.03;
    }
}

if (enterCreditAnimation == 1){

    if (menuAlpha &lt;= 0){
    
        room_goto(rm_credits);
    }else{
    
        menuAlpha -= 0.03;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (animationOver == 1){

    draw_set_font(fnt_score);
    draw_set_halign(fa_left);
    draw_set_valign(fa_center);

    draw_text_colour(menuXMargin, menuYMargin + 50, "Play", playColor, playColor, playColor, playColor, menuAlpha);
    draw_text_colour(menuXMargin, menuYMargin + 100, "Leaderboards", leaderboardColor, leaderboardColor, leaderboardColor, leaderboardColor, menuAlpha);
    draw_text_colour(menuXMargin, menuYMargin + 150, "Credits", creditsColor, creditsColor, creditsColor, creditsColor, menuAlpha);
    draw_text_colour(menuXMargin, menuYMargin  + 200, "Exit", exitColor, exitColor, exitColor, exitColor, menuAlpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
